<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Product Management System</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</head>
<body>
<div class="container mt-3">
<h1>Product Management System</h1>
<table class="table table-striped">
<thead>
<tr>
<th>Product Code</th>
<th>Product Name</th>
<th>Product Date</th>
<th>Original Price</th>
<th>Quantity</th>
<th>Store Code</th>
<th>Actions</th>
</tr>
</thead>
<tbody id="products"></tbody>
</table>
<hr>
<h2>Add New Product</h2>
<form id="product-form">
<div class="form-group">
<label for="productCode">Product Code</label>
<input type="text" class="form-control" id="productCode" name="productCode" required>
</div>
<div class="form-group">
<label for="productName">Product Name</label>
<input type="text" class="form-control" id="productName" name="productName" required>
</div>
<div class="form-group">
    <label for="productDate">Product Date (DD-MM-YYYY)</label>
    <input type="date" class="form-control" id="productDate" name="productDate" required>
</div>
<div class="form-group">
    <label for="productOriginPrice">Original Price</label>
    <input type="number" class="form-control" id="productOriginPrice" name="productOriginPrice" step="0.01" required>
</div>
<div class="form-group">
    <label for="quantity">Quantity</label>
    <input type="number" class="form-control" id="quantity" name="quantity" min="1" required>
</div>
<div class="form-group">
    <label for="productStoreCode">Store Code</label>
    <input type="text" class="form-control" id="productStoreCode" name="productStoreCode" required>
</div>
<button type="submit" class="btn btn-primary">Add Product</button>
</form>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
const productTable = document.getElementById('products');

// Fetch all products on page load
window.onload = async () => {
    try {
        const response = await axios.get('/api/products');
        const products = response.data;
        products.forEach(product => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td><span class="math-inline">${product.productCode}</span></td>
                <td><span class="math-inline">${product.productName}</span></td>
                <td><span class="math-inline">${new Date(product.productDate).toLocaleDateString()}</span></td>
                <td><span class="math-inline">${product.productOriginPrice.toFixed(2)}</span></td>
                <td><span class="math-inline">${product.quantity}</span></td>
                <td><span class="math-inline">${product.productStoreCode}</span></td>
                <td>
                    <button class="btn btn-danger btn-sm delete-product" data-id="${product._id}">Delete</button>
                </td>
            `;
            productTable.appendChild(row);
        });
    } catch (error) {
        console.error(error);
        alert('Error fetching products');
    }
};
function formatDate(date) {
    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
    return new Date(date).toLocaleDateString('en-US', options);
}
// Add product form submission
const productForm = document.getElementById('product-form');
productForm.addEventListener('submit', async (event) => {
    event.preventDefault();
    try {
        // Create FormData object from the form
        const formData = new FormData(productForm);

        // Convert FormData to object
        const newProduct = {};
        formData.forEach((value, key) => {
            newProduct[key] = value;
        });

        // Send the new product data to the server
        const response = await axios.post('/api/products', newProduct);

        // Add new product row to table
        const row = document.createElement('tr');
        row.innerHTML = `
            <td><span class="math-inline">${newProduct.productCode}</span></td>
            <td><span class="math-inline">${newProduct.productName}</span></td>
            <td><span class="math-inline">${formatDate(newProduct.productDate)}</span></td>
            <td><span class="math-inline">${newProduct.productOriginPrice.toFixed(2)}</span></td>
            <td><span class="math-inline">${newProduct.quantity}</span></td>
            <td><span class="math-inline">${newProduct.productStoreCode}</span></td>
            <td>
                <button class="btn btn-danger btn-sm delete-product" data-id="${response.data._id}">Delete</button>
            </td>
        `;

        // Prepend the new row to the table
        productTable.prepend(row);

        // Clear form
        productForm.reset();
        location.reload()
    } catch (error) {
        console.error(error);
        location.reload()
        productForm.reset();
    }
});


// Delete product functionality
productTable.addEventListener('click', async (event) => {
    if (event.target.classList.contains('delete-product')) {
        const productId = event.target.dataset.id;
        try {
            const response = await axios.delete(`/api/products/${productId}`);
            if (response.data.message === 'Product Deleted') {
                event.target.parentElement.parentElement.remove();
            } else {
                alert('Error deleting product');
            }
        } catch (error) {
            console.error(error);
            alert('Error deleting product');
        }
    }
});
</script>
</body>
</html>
